--- atm/pppbr-001212-br2684ctl.c~	Thu Jan 11 17:21:03 2001
+++ atm/pppbr-001212-br2684ctl.c	Thu Jan 11 17:30:38 2001
@@ -4,6 +4,7 @@
 #include <errno.h>
 #include <sys/ioctl.h>
 #include <string.h>
+#include <syslog.h>
 #include <atm.h>
 #include <linux/atmdev.h>
 #include <linux/atmbr2684.h>
@@ -16,7 +16,7 @@
 
 void fatal(char *str, int i)
 {
-	perror(str);
+	syslog(LOG_ERR, str);
 	exit(-2);
 };
 
@@ -39,11 +39,11 @@
 	   ni.mtu = 1500;
 	   sprintf(ni.ifname, "nas%d", num);
            err=ioctl (lastsock, ATM_NEWBACKENDIF, &ni);
-           printf("create:%d\n",err);
+           syslog(LOG_INFO,"create:%d\n",err);
            if (err>=0) ;;;
            lastitf=num;	/* even if we didn't create, because existed, assign_vcc wil want to know it! */
           } else {
-          	fprintf (stderr, "err: strange itf number %d", num );
+          	syslog(LOG_WARNING, "err: strange itf number %d", num );
           }
           }
   return 0;
@@ -59,19 +59,19 @@
 
 	memset(&addr, 0, sizeof(addr));
 	err=text2atm(astr,(struct sockaddr *)(&addr), sizeof(addr), T2A_PVC);
-           printf("text2atm:%d\n",err);
+           syslog(LOG_INFO,"text2atm:%d\n",err);
 #if 0
 	addr.sap_family = AF_ATMPVC;
     addr.sap_addr.itf = itf;
     addr.sap_addr.vpi = 0;
     addr.sap_addr.vci = vci;
 #endif
-    fprintf(stderr,"Communicating over ATM %d.%d.%d\n", addr.sap_addr.itf,
+    syslog(LOG_INFO,"Communicating over ATM %d.%d.%d\n", addr.sap_addr.itf,
                                            addr.sap_addr.vpi,
                                            addr.sap_addr.vci);
 
     if ((fd = socket(PF_ATMPVC, SOCK_DGRAM, ATM_AAL5)) < 0)
-       fprintf(stderr,"failed to create socket %d", errno);
+       syslog(LOG_ERR,"failed to create socket %d", errno);
 
 
     memset(&qos, 0, sizeof(qos));
@@ -82,10 +82,10 @@
     qos.rxtp = qos.txtp;
 
         err=setsockopt(fd,SOL_SOCKET,SO_SNDBUF, &bufsize ,sizeof(bufsize));
-        fprintf(stderr,"setsockopt SO_SNDBUF: (%d) %s\n",err, strerror(err));
+        syslog(LOG_ERR,"setsockopt SO_SNDBUF: (%d) %s\n",err, strerror(err));
 
     if (setsockopt(fd, SOL_ATM, SO_ATMQOS, &qos, sizeof(qos)) < 0)
-        fprintf(stderr,"setsockopt SO_ATMQOS %d", errno);
+        syslog(LOG_ERR,"setsockopt SO_ATMQOS %d", errno);
 
        err = connect(fd, (struct sockaddr*)&addr, sizeof(struct sockaddr_atmpvc));
 
@@ -105,7 +105,7 @@
     be.send_padding = 0;
     be.min_size = 0;
            err=ioctl (fd, ATM_SETBACKEND, &be);
-           fprintf(stderr, "assign:%d\n",err);
+           syslog(LOG_INFO, "assign:%d\n",err);
 
     return fd ;
 }
@@ -123,6 +123,7 @@
 	lastsock=-1;
 	lastitf=0;
 
+	openlog("br2684ctl",LOG_PID,LOG_DAEMON);
 while ((c = getopt(argc, argv,"a:bc:e:s:")) !=EOF)
 	switch (c) {
 		case 'a':
@@ -137,14 +138,14 @@
 		case 'e':
 			encap=(atoi(optarg));
 			if(encap<0){
-				fprintf(stderr, "invalid encap: %s:\n",optarg);
+				syslog(LOG_INFO, "invalid encap: %s:\n",optarg);
 				encap=0;
 			}
 			break;
 		case 's':
 			sndbuf=(atoi(optarg));
 			if(sndbuf<0){
-				fprintf(stderr, "invalid sndbuf: %s:\n",optarg);
+				syslog(LOG_INFO, "invalid sndbuf: %s:\n",optarg);
 				sndbuf=8192;
 			}
 			break;
@@ -160,10 +161,10 @@
 	/* this seems to be broken, do not use -b for now */
 		pid=fork();
 		if (pid < 0) {
-			fprintf(stderr,"fork returned negative: %d\n", pid);
+			syslog(LOG_ERR,"fork returned negative: %d\n", pid);
 			exit(2);
 		} else if (pid) {
-			fprintf(stderr,"Background pid: %d\n",pid);
+			syslog(LOG_INFO,"Background pid: %d\n",pid);
 			exit(0);
 		}
 	}
